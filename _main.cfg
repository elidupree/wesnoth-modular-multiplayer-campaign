#ifdef MULTIPLAYER
[modification]
id=modular_multiplayer_campaign
name= "Modular multiplayer campaign"
[event]
name=preload
[lua]
code=<<
local helper = wesnoth.require ("lua/helper.lua")

MMC = {}
MMC.heal_unit = function (unit)
unit.hitpoints = unit.max_hitpoints
unit.status.poisoned = false
unit.status.slowed = false
end
MMC.factions = {}
for faction in helper.child_range (wesnoth.game_config.era, "multiplayer_side") do
table.insert (MMC.factions, faction)
end
MMC.begin_scenario = function ()
local units = wesnoth.get_units ({})
for I, unit in ipairs (units ) do
if wesnoth.get_variable ("MMC_human" .. unit.side) then
wesnoth.extract_unit (unit)--is this necessary?
MMC.heal_unit (unit)
if unit.canrecruit then
wesnoth.put_unit (wesnoth.get_variable ("MMC_start_X" ..  unit.side), wesnoth.get_variable ("MMC_start_Y" ..  unit.side), unit)
else
wesnoth.put_recall_unit (unit)
end
else
wesnoth.extract_unit (unit)
end
end
end
for I, side in ipairs (wesnoth.sides) do
if wesnoth.get_variable ("MMC_human" ..  I) then
side.gold = 150
elseif wesnoth.get_variable ("MMC_AI".. I) then
side.gold = math.floor (250*wesnoth.get_variable ("MMC_human_sides")/wesnoth.get_variable ("MMC_AI_sides"))
local faction = MMC.factions [helper.rand ("1.." ..  #MMC.factions)]
wesnoth.put_unit ({
x = wesnoth.get_variable ("MMC_start_X" ..  I),
y = wesnoth.get_variable ("MMC_start_Y" ..  I),
type = helper.rand (faction.random_leader or faction.leader),
side = I,
canrecruit = true,
})
wesnoth.fire ("set_recruit", {site = I, recruit = faction.recruit})
end
end
>>
[/lua]
[/event]

[event]
name=prestart
[lua]
code=<<
local units = wesnoth.get_units ({canrecruit = true})
AI_sides = {}
human_sides = {}
for I, unit in ipairs (units) do
wesnoth.set_variable ("MMC_start_X" ..  unit.side,unit.x)
wesnoth.set_variable ("MMC_start_Y" ..  unit.side, unit.y)
local a={human = true, network = true, idle = true}
if a[wesnoth.sides [unit.side].controller] then
wesnoth.set_variable ("MMC_human" ..  unit.side, true) 
table.insert (human_sides, "" ..  unit.side)
else
wesnoth.set_variable ("MMC_AI"..unit.side, true) 
table.insert (AI_sides, "" ..  unit.side) 
wesnoth.extract_unit (unit)
end
end
wesnoth.set_variable ("MMC_AI_sides_list", table.concat (AI_sides, ","))
wesnoth.set_variable ("MMC_human_sides_list", table.concat (human_sides, ","))
wesnoth.set_variable ("MMC_AI_sides", #AI_sides)
wesnoth.set_variable ("MMC_human_sides", #human_sides)
MMC.begin_scenario ()
>>
[/lua]
[/event]

[event]
name=die
[filter]
canrecruit=true
[/filter]
[lua]
code=<<
local unit = wesnoth.get_unit (wesnoth.current.event_context.x1, wesnoth.current.event_context.y1)
if wesnoth.get_variable ("MMC_human" ..  unit.side) then wesnoth.fire ("endlevel", {result = "defeat"}) else
if not wesnoth.get_units ({canrecruit = true, side = "$MMC_AI_sides_list"}) [0] then
MMC.begin_scenario ()
end
end
>>
[/lua]
[/event]
[/modification]
#endif
